---
Title: ' javaMEをiPhone用に6月にSUNが出すということだけど…'
Category:
- iPod touch開発
Date: 2008-03-07T11:53:25+09:00
URL: http://tkatochin.hatenablog.com/entry/20080307/1205204005
EditURL: https://blog.hatena.ne.jp/t-katochin/tkatochin.hatenablog.com/atom/entry/6653586347154754937
---

　AppleのUIガイドラインに沿えるのだろうか？SWTのようにCocoa touchのラッパークラスをJNIで実装するならともかく((しかしこれも無駄にめんどくさそうな上にメモリも速度も悪化するだけでメリットなさそう。))、タッチスクリーンのジェスチャやローテートなど新たな入力デバイス用のI/Fを追加しなければならないだろうし、画面のエフェクトなども同等のものを用意するのは大変だろうし、困難なんじゃないだろうか。Cocoaを知らないJavaプログラマは諸手をあげて喜ぶかもしれないけど、両方わかっている今の自分から見るとjava要らない感じ。Runtime時の使用メモリ上限の問題もあるのでVM挟む余裕はないなぁと思う((この辺はアプリの規模次第だけど))。私もMac触る前は「Javaで開発したいな&#12316;」「Objective-Cやだな&#12316;」と生温いこと思ってましたが、色々考えるとJavaでのiPhone UIは開発も困難なのが予想されます。iPhone SDKではObjectiveC2.0の機能を幾つか使えるようになってるし、Cocoa touchが唯一標準のフレームワークなので、亜種フレームワークが出て乱立してくるのは好ましくないなぁと思います。それに重要なAPIはすぐ隠蔽されますし標準に従わないのは本当に不利です。この辺の困難さはWindowsやLinuxの比じゃないです。((メモリ管理だけはマジめんどくさいしいちいち気が休まらないけど))
　非GUIのサービス層アプリケーションをJavaで作ってUI層のCocoa touchアプリとメッセージ通信させるという手が一番意味のある使い方になりそうです((しかしこれさえAppleの規定するプロセス間通信方式に準拠しなければならないので、iPhone JVMでちゃんと提供されないことには始まりません。NDA絡むのでこれ以上書かない方が良さそう))。
